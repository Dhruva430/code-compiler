generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String             @id
  name             String
  email            String
  emailVerified    Boolean
  image            String?
  createdAt        DateTime
  updatedAt        DateTime
  sessions         Session[]
  accounts         Account[]
  executionHistory ExecutionHistory[]

  @@unique([email])
  @@map("user")
}

model ExecutionHistory {
  id        String         @id
  code      String?
  lang      Lang
  createdAt DateTime?
  user      User           @relation(fields: [userId], references: [id])
  userId    String
  state     ExecutionState @default(completed)

  @@map("execution_history")
}

model ExecutionStats {
  lang           String @id // Language
  completedCount Int    @default(0)

  @@map("execution_stats")
}

enum ExecutionState {
  completed
  timeout
  error
}

model LangCount {
  id    String @id
  count Int    @default(0)
}

enum Lang {
  python
  javascript
  java
  c
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
